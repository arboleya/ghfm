// Generated by CoffeeScript 1.6.3
var client_id, client_secret, fs, login, path, prompt, request;

fs = require('fs');

path = require('path');

prompt = require('prompt');

request = require('request');

client_id = '4b5a6ab7eea4c6aaee37';

client_secret = '769602c9c4a0944a5386e883db4670e436f3af5a';

module.exports = function(done) {
  return login(function(user, pass) {
    var options, url;
    url = 'https://api.github.com/authorizations/clients/' + client_id;
    options = {
      auth: {
        user: user,
        pass: pass
      },
      body: JSON.stringify({
        note: 'GHFM - Github Flavored Markdown Previewer',
        scopes: ['public_repo'],
        client_secret: client_secret
      })
    };
    return request.put(url, options, function(req, res) {
      if (~'401 Unauthorized 403 Forbidden'.indexOf(res.headers.status)) {
        console.log('Incorrect credentials, try again');
        return module.exports(done);
      }
      fs.writeFileSync(path.join(__dirname, 'user.oauth.json'), res.body);
      return done();
    });
  });
};

login = function(done) {
  var schema;
  prompt.start();
  schema = {
    properties: {
      username: {
        pattern: /.+/,
        required: true
      },
      password: {
        hidden: true,
        pattern: /.+/,
        required: true
      }
    }
  };
  return prompt.get(schema, function(err, res) {
    return done(res.username, res.password);
  });
};

/*
//@ sourceMappingURL=register.map
*/
